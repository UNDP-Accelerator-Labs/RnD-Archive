import re
import os
import sys
from os import listdir, makedirs
from os.path import isfile, join, basename, splitext, exists
from urllib.parse import quote

basepath = './stories/__pages__/'

# Get base path from CLI arg or env var (e.g., from GitHub Actions)
basePath = (
    sys.argv[1]
    if len(sys.argv) > 1
    else os.getenv("BASE_PATH", "")
)

# Normalize basePath (leading slash, no trailing slash)
if basePath and not basePath.startswith("/"):
    basePath = "/" + basePath
if basePath.endswith("/"):
    basePath = basePath[:-1]

def getText (file):
	f = open(file, 'r')
	return f.read()

def getTitle (text):
	mdTitle = re.search(r'^#\s+.*', text, flags = re.MULTILINE).group()
	return re.sub(r'#\s+', '', mdTitle)

def setListItem (file):
	filename = splitext(basename(file))[0]
	text = getText(join(basepath, file))
	title = getTitle(text)
	continents = re.findall(r'\[\[continent:[\w\s]*\]\]', text)
	continents = [re.sub(r'[\[\]]*', '', c).replace('continent:', '') for c in continents]
	countries = re.findall(r'\[\[country:[\w\s]*\]\]', text)
	countries = [re.sub(r'[\[\]]*', '', c).replace('country:', '') for c in countries]
	return ("- [{}](./?doc={})".format(title, quote(filename)), continents, countries)
	# return "- [{}](./?doc={})".format(title, quote(filename))

def generateFile (readme, content):
	if exists(readme):
		text = getText(readme)
		content = re.sub(r'<!-- !!DO NOT REMOVE!! start autogenerated hyperlinks -->(.|\s)*<!-- !!DO NOT REMOVE!! end autogenerated hyperlinks -->', content, text)
	else:
		content = "# R&D Stories\n\n{}".format(content)
	
	with open(readme, 'w') as pipe:
		pipe.write(content)

if __name__ == '__main__':
	onlyfiles = [file for file in listdir(basepath) if isfile(join(basepath, file)) and file != '.DS_Store']
	listItems = [setListItem(file) for file in onlyfiles]
	# listItems.sort()

	# content = "<!-- !!DO NOT REMOVE!! start autogenerated hyperlinks -->\n{}\n<!-- !!DO NOT REMOVE!! end autogenerated hyperlinks -->".format("\n".join(listItems))
	
	continents = list(set([t for (l,cons,ctrs) in listItems for t in cons]))
	continents.sort()

	content = '<!-- !!DO NOT REMOVE!! start autogenerated hyperlinks -->'

	for continent in continents:
		content = content + "\n\n## [{}](./{})".format(continent.capitalize(), quote(continent))

		items = [(l.replace('**PLACEHODER**', continent), ctrs) for (l,cons,ctrs) in listItems if continent in cons]
		items.sort()
		countries = list(set([c for (l,cons,ctrs) in listItems if continent in cons for c in ctrs]))
		countries.sort()

		subcontent = '\n<div class=multicol>'
		# subcontent = subcontent + '\n\n<div>\n\n'
		for country in countries:
			print(country)
			subcontent = subcontent + '\n\n<div>\n\n'
			countryItems = [l for (l, ctrs) in items if country in ctrs]
			print(countryItems)
			subcontent = subcontent + "### {}\n\n{}".format(country.capitalize(), "\n".join(countryItems))
			subcontent = subcontent + '\n</div>'
		# subcontent = subcontent + '\n\n'.join(items)
		# subcontent = subcontent + '\n</div>'

		subcontent = subcontent + '\n</div>'
		# GENERATE THE FILE IN THE SUBDIRECTORY
		subpath = join('./stories/', continent)
		# IF THE SUBDIR DOES NOT EXIST, CREATE IT
		if not exists(subpath):
		    os.makedirs(subpath)

		subreadme = join(subpath, 'README.md')
		generateFile (subreadme, subcontent)
		# ADD TO THE GENERAL CONTENT FOR THE MAIN DIRECTORY
		content = content + subcontent

	content = content + '\n\n<!-- !!DO NOT REMOVE!! end autogenerated hyperlinks -->'
	# print(content)

	readme = join('./stories/', 'README.md')
	generateFile(readme, content)
	
	# if exists(readme):
	# 	text = getText(readme)
	# 	content = re.sub(r'<!-- !!DO NOT REMOVE!! start autogenerated hyperlinks -->(.|\s)*<!-- !!DO NOT REMOVE!! end autogenerated hyperlinks -->', content, text)
	# else:
	# 	content = "# R&D Stories\n\n{}".format(content)
	
	# with open(readme, 'w') as pipe:
	# 	pipe.write(content)